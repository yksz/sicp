(define (pascals-triangle n k)
  (cond ((< n k) 0)
        ((< n 1) 0)
        ((< k 1) 0)
        ((= k 1) 1)
        ((= k n) 1)
        (else (+ (pascals-triangle (- n 1) (- k 1))
                 (pascals-triangle (- n 1) k)))))


(load "../util/assert.scm")
(assert-eqv "(pascals-triangle 1 1)" 1 (pascals-triangle 1 1))
(assert-eqv "(pascals-triangle 2 1)" 1 (pascals-triangle 2 1))
(assert-eqv "(pascals-triangle 2 2)" 1 (pascals-triangle 2 2))
(assert-eqv "(pascals-triangle 3 1)" 1 (pascals-triangle 3 1))
(assert-eqv "(pascals-triangle 3 2)" 2 (pascals-triangle 3 2))
(assert-eqv "(pascals-triangle 3 3)" 1 (pascals-triangle 3 3))
(assert-eqv "(pascals-triangle 4 1)" 1 (pascals-triangle 4 1))
(assert-eqv "(pascals-triangle 4 2)" 3 (pascals-triangle 4 2))
(assert-eqv "(pascals-triangle 4 3)" 3 (pascals-triangle 4 3))
(assert-eqv "(pascals-triangle 4 4)" 1 (pascals-triangle 4 4))
